# TurtleBot Backend Environment Configuration
# Copy this file to .env and fill in your actual values

# Firebase Admin SDK Configuration
# Path to your Firebase service account key JSON file
FIREBASE_SERVICE_ACCOUNT_PATH=./serviceAccountKey.json

# Server Configuration
# Port for the backend server to run on
PORT=4000
# Frontend URL for CORS configuration
FRONTEND_URL=http://localhost:5173

# Admin Setup Security
# Change this to a secure random string for production
ADMIN_SETUP_SECRET=your-super-secret-admin-key-change-this-in-production

# Email Configuration for OTP Service
# Gmail example - use your Gmail address and app-specific password
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-specific-password

# Firebase Configuration (Alternative to service account file)
# These values can be found in your Firebase project settings
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com

# Email Service Configuration Notes:
# For Gmail:
# 1. Enable 2-factor authentication on your Google account
# 2. Generate an app-specific password: https://myaccount.google.com/apppasswords
# 3. Use your Gmail address for EMAIL_USER
# 4. Use the app-specific password (without spaces) for EMAIL_PASS
#
# For other email providers:
# - Update the nodemailer configuration in services/otpService.js
# - Refer to nodemailer documentation for provider-specific settings

# Security Notes:
# - Never commit the actual .env file to version control
# - Use strong, unique passwords and secrets
# - Regularly rotate your API keys and passwords
# - Consider using environment-specific configurations for development/staging/production
